%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/

%% Created for David Oberacker at 2020-05-12 14:02:57 +0200 


%% Saved with string encoding Unicode (UTF-8) 



@article{Erickson:1996aa,
	Author = {K. T. {Erickson}},
	Date-Added = {2020-05-12 14:02:36 +0200},
	Date-Modified = {2020-05-12 14:02:52 +0200},
	Journal = {IEEE Potentials},
	Number = {1},
	Pages = {14-17},
	Title = {Programmable logic controllers},
	Volume = {15},
	Year = {1996}}

@article{Darvas:2017aa,
	Author = {Darvas, D{\'a}niel and Majzik, Istv{\'a}n and Blanco Vi{\~n}uela, Enrique},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Doi = {https://doi.org/10.3311/PPee.9743},
	Journal = {Periodica Polytechnica Electrical Engineering and Computer Science},
	Number = {2},
	Pages = {151-165},
	Title = {PLC Program Translation for Verification Purposes},
	Url = {https://pp.bme.hu/eecs/article/view/9743},
	Volume = {61},
	Year = {2017},
	Bdsk-Url-1 = {https://pp.bme.hu/eecs/article/view/9743},
	Bdsk-Url-2 = {https://doi.org/10.3311/PPee.9743}}

@article{Sadolewski:2011aa,
	Author = {Jan Sadolewski},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Doi = {https://doi.org/10.2478/v10233-011-0031-3},
	Journal = {e-Informatica},
	Pages = {65-76},
	Title = {Conversion of ST Control Programs to ANSI C for Verification Purposes},
	Url = {https://www.semanticscholar.org/paper/Conversion-of-ST-Control-Programs-to-ANSI-C-for-Sadolewski/b111ec95456b2239abe38d18e9c1f31c98fb34df},
	Volume = {5},
	Year = {2011},
	Bdsk-Url-1 = {https://www.semanticscholar.org/paper/Conversion-of-ST-Control-Programs-to-ANSI-C-for-Sadolewski/b111ec95456b2239abe38d18e9c1f31c98fb34df},
	Bdsk-Url-2 = {https://doi.org/10.2478/v10233-011-0031-3}}

@inproceedings{Economakos:2012aa,
	Author = {C. {Economakos} and G. {Economakos}},
	Booktitle = {2012 16th International Conference on System Theory, Control and Computing (ICSTCC)},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Pages = {1-6},
	Title = {C-based PLC to FPGA translation and implementation: The effects of coding styles},
	Year = {2012}}

@inproceedings{Frey:2000aa,
	Author = {G. {Frey} and L. {Litz}},
	Booktitle = {Smc 2000 conference proceedings. 2000 ieee international conference on systems, man and cybernetics. 'cybernetics evolving to systems, humans, organizations, and their complex interactions' (cat. no.0},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Pages = {2431-2436 vol.4},
	Title = {Formal methods in PLC programming},
	Volume = {4},
	Year = {2000}}

@article{Obermeier:2015aa,
	Author = {M. {Obermeier} and S. {Braun} and B. {Vogel-Heuser}},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Journal = {IEEE Transactions on Industrial Informatics},
	Number = {3},
	Pages = {790-800},
	Title = {A Model-Driven Approach on Object-Oriented PLC Programming for Manufacturing Systems with Regard to Usability},
	Volume = {11},
	Year = {2015}}

@inproceedings{Bayrak:2012aa,
	Author = {G. {Bayrak} and P. J. {Murr} and S. {Ulewicz} and B. {Vogel-Heuser}},
	Booktitle = {Proceedings of 2012 IEEE 17th International Conference on Emerging Technologies Factory Automation (ETFA 2012)},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Pages = {1-8},
	Title = {Comparison of a transformed Matlab/Simulink model into the programming language CFC on different IEC 61131-3 PLC environments},
	Year = {2012}}

@article{Cousineau:2019aa,
	Adsnote = {Provided by the SAO/NASA Astrophysics Data System},
	Adsurl = {https://ui.adsabs.harvard.edu/abs/2019arXiv191210629C},
	Archiveprefix = {arXiv},
	Author = {{Cousineau}, Denis and {Mentr{\'e}}, David and {Inoue}, Hiroaki},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Eid = {arXiv:1912.10629},
	Eprint = {1912.10629},
	Journal = {arXiv e-prints},
	Keywords = {Computer Science - Software Engineering, Computer Science - Logic in Computer Science, Computer Science - Programming Languages},
	Month = dec,
	Pages = {arXiv:1912.10629},
	Primaryclass = {cs.SE},
	Title = {{Automated Deductive Verification for Ladder Programming}},
	Year = 2019}

@article{Kormann:2012aa,
	Abstract = {Current production plants are highly customizable and flexible in their processes. This flexibility is mainly realized by software. It causes an increasing complexity of control software components and the need of new methods for comprehensive and automated testing approaches to ensure a requested level of quality at high efficiency. A survey among mechanical engineering companies of the industries aerospace, automotive and machine/plant automation was conducted. Aspects of requirements engineering, testing, simulation, processes, tools, etc. were addressed to reveal research demands of PLC (Programmable Logic Controller) control software development in machine/plant automation. A system architecture embedding UML sequence diagrams for testing is proposed. We further contribute transformation rules of semantically adapted UML sequence diagrams to the cyclic execution logic of PLCs for reactive systems. The approach can be applied to any IEC 61131-3 programming language of the automation control software. A prototypical realization shows proof of concept and reveals the potential for future work.},
	Author = {Benjamin Kormann and Dmitry Tikhonov and Birgit Vogel-Heuser},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Doi = {https://doi.org/10.3182/20120523-3-RO-2023.00148},
	Issn = {1474-6670},
	Journal = {IFAC Proceedings Volumes},
	Keywords = {UML, Real-Time, Software Testing, IEC 61131-3, Semantics, PLC},
	Note = {14th IFAC Symposium on Information Control Problems in Manufacturing},
	Number = {6},
	Pages = {1615 - 1621},
	Title = {Automated PLC Software Testing using adapted UML Sequence Diagrams},
	Url = {http://www.sciencedirect.com/science/article/pii/S1474667016333821},
	Volume = {45},
	Year = {2012},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S1474667016333821},
	Bdsk-Url-2 = {https://doi.org/10.3182/20120523-3-RO-2023.00148}}

@article{Papoutsidakis:2017aa,
	Author = {Papoutsidakis, Michail and Xatzopoulos, A. and Smyraiou, G. and Tseles, Dimitris and Chatzopoulos, Abraham},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Doi = {10.5120/ijca2017914498},
	Journal = {International Journal of Computer Applications},
	Month = {06},
	Pages = {49-53},
	Title = {PLC Programming Case Study for Hydraulic Positioning Systems Implementations},
	Volume = {167},
	Year = {2017},
	Bdsk-Url-1 = {https://doi.org/10.5120/ijca2017914498}}

@article{Koch:2019aa,
	Abstract = {Configuration and implementation of safety programs for robot applications have to face the common requirements of changeability and flexibility. The paper points out the challenges for safety and that dynamic reconfiguration and automated compilation of safety programs are not state of the art and not supported by international standards. On the other side HRC technologies and collaborative production scenarios, lead to more required knowledge and a higher complexity in creating safety programs. This paper gives an overview of the state of the art, how safety programs for robot applications are generated and what approaches and methods can be found to automate the program generation. The throughout this paper introduced approach for an automated safety configuration for robot applications is based on the information model of the application. The model consists of product, process, resource and hazard information. Combined with a safety function model and safety standards, it results in a proposed safety state machine as safety program. The throughout this paper introduced safety states are explained by an application example. The safety program is structured by safety states and implemented in a conventional way.},
	Author = {Thomas Koch},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Doi = {https://doi.org/10.1016/j.procir.2019.04.280},
	Issn = {2212-8271},
	Journal = {Procedia CIRP},
	Keywords = {Safety implementation, Changeability, Safety state, State machine, Design methodology, methods, tools, Collaborative Design},
	Note = {29th CIRP Design Conference 2019, 08-10 May 2019, P{\'o}voa de Varzim, Portgal},
	Pages = {896 - 901},
	Title = {Approach for an automated safety configuration for robot applications},
	Url = {http://www.sciencedirect.com/science/article/pii/S2212827119309278},
	Volume = {84},
	Year = {2019},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S2212827119309278},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.procir.2019.04.280}}

@inproceedings{Lewis:2002aa,
	Author = {R. {Lewis}},
	Booktitle = {IEE The Application of IEC 61131 in Industrial Control (Ref. No. 2002/060)},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Pages = {2/1-2/6},
	Title = {Can IEC 61131 graphical languages be used for safety related PLC applications?},
	Year = {2002}}

@inproceedings{Yoong:2010aa,
	Author = {Li Hsien Yoong},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Title = {Modelling and Synthesis of Safety-critical Software with IEC 61499},
	Year = {2010}}

@phdthesis{Missal:2012aa,
	Author = {Dirk Missal},
	Bibsource = {dblp computer science bibliography, https://dblp.org},
	Biburl = {https://dblp.org/rec/phd/dnb/Missal12.bib},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Isbn = {978-3-8325-3147-8},
	School = {Martin Luther University of Halle-Wittenberg},
	Timestamp = {Mon, 02 May 2016 17:54:17 +0200},
	Title = {Formal synthesis of safety controller code for distributed controllers},
	Url = {http://d-nb.info/1021582786},
	Year = {2012},
	Bdsk-Url-1 = {http://d-nb.info/1021582786}}

@article{Huang:2019aa,
	Author = {Yanhong Huang and Xiangxing Bu and Gang Zhu and Xin Ye and Xiaoran Zhu and Jianqi Shi},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Journal = {IEEE Access},
	Pages = {14593-14602},
	Title = {KST: Executable Formal Semantics of IEC 61131-3 Structured Text for Verification},
	Volume = {7},
	Year = {2019}}

@article{Pradhan:2018aa,
	Author = {Sonakshi Pradhan and K. Rajarajan and Arun S Shetty},
	Date-Modified = {2020-05-09 16:50:27 +0200},
	Journal = {2018 Second International Conference on Electronics, Communication and Aerospace Technology (ICECA)},
	Pages = {806-810},
	Title = {Analysis and Implementation of Dual Pick and Place Operation in Smart Manufacturing Domain},
	Year = {2018}}

@online{Wiki:Plc,
	title={Programmable Logic Controller},
	author={Wikipedia},
	year=2020,
	url={https://en.wikipedia.org/wiki/Programmable_logic_controller},
	urldate={2020-05-21}
}

@online{Wiki:ST,
	title={Structured Text},
	author={Wikipedia},
	year=2020,
	url={https://en.wikipedia.org/wiki/Structured_text},
	urldate={2020-05-21}
}

@online{Plcopen:61131-3,
	title={IEC 61131-3},
	author={PLCOpen},
	year=2020,
	url={https://plcopen.org/iec-61131-3},
	urldate={2020-05-21}
}
@online{Beckhoff:IL,
	title={Instruction List},
	author={Beckhoff Information System},
	year=2020,
	url={https://infosys.beckhoff.com/english.php?content=../content/1033/tcplccontrol/html/TcPlcCtrl_Languages%20IL.htm},
	urldate={2020-05-21}
}

@book {BOLTON200653,
    title={Programmable Logic Controllers},
    editor = "W. Bolton",
    publisher = "Newnes",
    edition = "Fourth Edition",
    address = "Oxford",
    year = "2006",
    isbn = "978-0-7506-8112-4",
    doi = "https://doi.org/10.1016/B978-0-7506-8112-4.X5018-9",
    url = "https://www.sciencedirect.com/book/9780750681124/programmable-logic-controllers",
    author = "W. Bolton",
}

@online{Reichelt:2020,
    title={SIMATIC S7-1500},
    url={https://www.reichelt.de/s7-1500-cpu-1511c-1-pn-s7-1511c-pn-p267951.html},
    year=2020,
    urldate={2020-05-22},
    author={reichelt elektronik},
}

@online{Businesswire:2016,
    title={SIMATIC S7-1500},
    url={https://www.businesswire.com/news/home/20160502005493/en/Technavio-Announces-Top-Vendors-Global-Micro-PLC},
    year=2016,
    urldate={2020-05-22},
    author={businesswire},
}


@inproceedings{Pussewalage:2013,
	author = {Gardiyawasam Pussewalage, Harsha and Ranaweera, Pasika and Oleshchuk, Vladimir},
	year = {2013},
	month = {12},
	pages = {81-85},
	title = {PLC security and critical infrastructure protection},
	isbn = {978-1-4799-0910-0},
	journal = {2013 IEEE 8th International Conference on Industrial and Information Systems, ICIIS 2013 - Conference Proceedings},
	doi = {10.1109/ICIInfS.2013.6731959}
}

@booklet{b-r_automation:2020,
	title={Automation Studio 4},
	url={https://www.br-automation.com/en/downloads/catalogues-and-brochures/products/automation-software/automation-studio-4/},
	year=2020,
	urldate={2020-05-29},
	author={B \& R Automation},
}

@booklet{Beckhoff:2020:2,
	title={Beckhoff TwinCAT3},
	url={https://download.beckhoff.com/download/Document/catalog/Beckhoff_TwinCAT3_e.pdf/},
	year=2020,
	urldate={2020-05-29},
	author={Beckhoff},
}

@book{10.5555/576122,
	author = {Kernighan, Brian W. and Ritchie, Dennis M.},
	title = {The  C Programming Language},
	year = {1988},
	isbn = {0131103709},
	publisher = {Prentice Hall Professional Technical Reference},
	edition = {2nd}
}


@report{ISO:9899:2018,
	title={ISO/IEC 9899:2018 Information technology — Programming languages — C},
	url={https://www.iso.org/standard/74528.html},
	year=2018,
	urldate={2020-05-29},
	author={ISO},
}

@INPROCEEDINGS{Frey:2000:2,
	author={G. {Frey}},
	booktitle={Proceedings of the 2000 American Control Conference. ACC (IEEE Cat. No.00CH36334)}, 
	title={Automatic implementation of Petri net based control algorithms on PLC}, 
	year={2000},
	volume={4},
	number={},
	pages={2819-2823 vol.4},}

@INPROCEEDINGS{Kuzmin:2013,
	author={E. V. {Kuzmin} and A. A. {Shipov} and D. A. {Ryabukhin}},
	booktitle={2013 Tools   Methods of Program Analysis}, 
	title={Construction and verification of PLC programs by LTL specification}, 
	year={2013},
	volume={},
	number={},
	pages={15-22},}

@InProceedings{10.1007/978-3-319-74730-9_23,
	author="Gritzner, Daniel
	and Greenyer, Joel",
	editor="Seidl, Martina
	and Zschaler, Steffen",
	title="Synthesizing Executable PLC Code for Robots from Scenario-Based GR(1) Specifications",
	booktitle="Software Technologies: Applications and Foundations",
	year="2018",
	publisher="Springer International Publishing",
	address="Cham",
	pages="247--262",
	abstract="Robots are found in most, if not all, modern production facilities and they increasingly enter other domains, e.g., health care. Robots participate in complex processes and often need to cooperate with other robots to fulfill their goals. They must react to a variety of events, both external, e.g., user inputs, and internal, i.e., actions of other components or robots in the system. Designing such a system, in particular developing the software for the robots contained in it, is a difficult and error-prone task. We developed a formal scenario-based modeling method which supports engineers in this task. Using short, intuitive scenarios engineers can express requirements, desired behavior, and assumptions made about the system's environment. These models can be created early in the design process and enable simulation as well as an automated formal analysis of the system and its components. Scenario-based models can drive the execution at runtime or can be used to generate executable code, e.g., programmable logic controller code. In this paper we describe how to use our scenario-based approach to not only improve the quality of a system through formal methods, but also how to reduce the manual implementation effort by generating executable PLC code.",
	isbn="978-3-319-74730-9"
}

@InProceedings{10.1007/978-3-319-33693-0_32,
	author="Darvas, D{\'a}niel
	and Majzik, Istv{\'a}n
	and Blanco Vi{\~{n}}uela, Enrique",
	editor="{\'A}brah{\'a}m, Erika
	and Huisman, Marieke",
	title="Formal Verification of Safety PLC Based Control Software",
	booktitle="Integrated Formal Methods",
	year="2016",
	publisher="Springer International Publishing",
	address="Cham",
	pages="508--522",
	abstract="Programmable Logic Controllers (PLCs) are widely used in the industry for various industrial automation tasks. Besides non-safety applications, the usage of PLCs became accepted in safety-critical installations, where the cost of failure is high. In these cases the used hardware is special (so-called fail-safe or safety PLCs), but also the software needs special considerations. Formal verification is a method that can help to develop high-quality software for critical tasks. However, such method should be adapted to the special needs of the safety PLCs, that are often particular compared to the normal PLC development domain. In this paper we propose two complementary solutions for the formal verification of safety-critical PLC programs based on model checking and equivalence checking using formal specification. Furthermore, a case study is presented, demonstrating our approach.",
	isbn="978-3-319-33693-0"
}

@INPROCEEDINGS{7819191,
	author={D. {Darvas} and E. B. {Viñuela} and I. {Majzik}},
	booktitle={2016 IEEE 14th International Conference on Industrial Informatics (INDIN)}, 
	title={PLC code generation based on a formal specification language}, 
	year={2016},
	volume={},
	number={},
	pages={389-396},}

@article{darvas2015syntax,
	title={Syntax and semantics of PLCspecif},
	author={Darvas, D and Vi{\~n}uela, E Blanco and Majzik, I},
	journal={CERN, Report EDMS},
	volume={1523877},
	year={2015}
}

@inproceedings{darvas2015requirements,
	title={Requirements towards a formal specification language for PLCs},
	author={Darvas, D{\'a}niel and Majzik, Istv{\'a}n and Vi{\~n}uela, E Blanco},
	booktitle={Proc. of the 22th PhD Mini-Symposium},
	pages={18--21},
	year={2015}
}

@article{darvas2015formal,
	title={A formal specification method for PLC-based applications},
	author={Darvas, D{\'a}niel and Blanco Vinuela, Enrique and Majzik, Istv{\'a}n},
	year={2015}
}

@article{WITSCH20117866,
	title = "PLC-Statecharts: An Approach to Integrate UML-Statecharts in Open-Loop Control Engineering – Aspects on Behavioral Semantics and Model-Checking",
	journal = "IFAC Proceedings Volumes",
	volume = "44",
	number = "1",
	pages = "7866 - 7872",
	year = "2011",
	note = "18th IFAC World Congress",
	issn = "1474-6670",
	doi = "https://doi.org/10.3182/20110828-6-IT-1002.02207",
	url = "http://www.sciencedirect.com/science/article/pii/S147466701644872X",
	author = "Daniel Witsch and Birgit Vogel-Heuser",
	abstract = "Abstract
	This paper presents the core concepts for PLC-statecharts – an adaptation of UML-statecharts – which can be used as a visual programming language for PLCs. They combine the advantages of UML-statecharts with a strict formal basis and can be transparently used in the context of IEC 61131-3 (3rd Edition). The defined formal behavioral semantics sets the basis for an automatic transformation of PLC-statecharts into timed automata which can be analyzed by the model-checker UPPAAL."
}

@article{JULIUS20191767,
	title = "A model-driven approach for transforming GRAFCET specification into PLC code including hierarchical structures",
	journal = "IFAC-PapersOnLine",
	volume = "52",
	number = "13",
	pages = "1767 - 1772",
	year = "2019",
	note = "9th IFAC Conference on Manufacturing Modelling, Management and Control MIM 2019",
	issn = "2405-8963",
	doi = "https://doi.org/10.1016/j.ifacol.2019.11.457",
	url = "http://www.sciencedirect.com/science/article/pii/S2405896319314387",
	author = "Robert Julius and Thomas Trenner and Joerg Neidig and Alexander Fay",
	keywords = "code generation, formal methods, GRAFCET, meta-model, Model-Driven Software Engineering (MDSE), Programmable Logic Controllers (PLC), Structured Text (ST), industrial automation",
	abstract = "GRAFCET, as defined in IEC 60848, is a powerful graphical modelling language to define the behavior of sequence controls with discrete event systems. In contrast to other specifications languages, one of the main advantages of GRAFCET is the specification of hierarchical structures. Therefore, distributed and nested program parts within a control application can be described by enclosing steps, partial-Grafcet and forcing orders. This contribution presents a meta-driven approach to transform GRAFCET specifications, including hierarchical structures, to Structured Text (ST), an IEC 61131-3 control programming language. To exactly meet the GRAFCET evolution rules and to mimic the specified behavior of the sequential control specification, an interpretation algorithm has been defined. The concept has been validated by means of an application example."
}

@INPROCEEDINGS{6489667,
	author={G. {Bayrak} and P. J. {Murr} and S. {Ulewicz} and B. {Vogel-Heuser}},
	booktitle={Proceedings of 2012 IEEE 17th International Conference on Emerging Technologies   Factory Automation (ETFA 2012)}, 
	title={Comparison of a transformed Matlab/Simulink model into the programming language CFC on different IEC 61131-3 PLC environments}, 
	year={2012},
	volume={},
	number={},
	pages={1-8},}

@report{UML:2-5-1,
	author={Object Management Group},
	title={{OMG Unified Modeling Language (OMG UML)}},
	year={2017},
	month={12},
	url={https://www.omg.org/spec/UML/2.5.1/},
	urldate={2020-06-06},
	version={2.5.1},
	institution={Object Management Group},
}

@report{SysML:1-6,
	author={Object Management Group},
	title={{OMG Systems Modeling Language (OMG SysML)}},
	year={2019},
	month={11},
	url={https://www.omg.org/spec/SysML/1.6/},
	urldate={2020-06-06},
	version={1.6},
	institution={Object Management Group},
}

@thesis{WITSCH2015,
	title={Modellgetriebene Entwicklung von Steuerungssoftware auf Basis der UML unter Berucksichtigung der domänenspezifischen Anforderungen des Maschinen- und Anlagenbaus},
	author={Daniel Witsch},
	year={2012},
	institution={Technische Universität München},
	isbn={3868445455},
}

@INPROCEEDINGS{6315074,
	author={B. {Vogel-Heuser} and S. {Braun} and M. {Obermeier} and F. {Jobst} and K. {Schweizer}},
	booktitle={2012 American Control Conference (ACC)}, 
	title={Usability evaluation on teaching and applying model-driven object oriented approaches for PLC software}, 
	year={2012},
	volume={},
	number={},
	pages={4463-4469},}

@INPROCEEDINGS{6957399,
	author={M. {Jamro}},
	booktitle={2014 19th International Conference on Methods and Models in Automation and Robotics (MMAR)}, 
	title={Automatic generation of implementation in SysML-based model-driven development for IEC 61131-3 control software}, 
	year={2014},
	volume={},
	number={},
	pages={468-473},}

@article{JULIUS20191767,
	title = "A model-driven approach for transforming GRAFCET specification into PLC code including hierarchical structures",
	journal = "IFAC-PapersOnLine",
	volume = "52",
	number = "13",
	pages = "1767 - 1772",
	year = "2019",
	note = "9th IFAC Conference on Manufacturing Modelling, Management and Control MIM 2019",
	issn = "2405-8963",
	doi = "https://doi.org/10.1016/j.ifacol.2019.11.457",
	url = "http://www.sciencedirect.com/science/article/pii/S2405896319314387",
	author = "Robert Julius and Thomas Trenner and Joerg Neidig and Alexander Fay",
	keywords = "code generation, formal methods, GRAFCET, meta-model, Model-Driven Software Engineering (MDSE), Programmable Logic Controllers (PLC), Structured Text (ST), industrial automation",
	abstract = "GRAFCET, as defined in IEC 60848, is a powerful graphical modelling language to define the behavior of sequence controls with discrete event systems. In contrast to other specifications languages, one of the main advantages of GRAFCET is the specification of hierarchical structures. Therefore, distributed and nested program parts within a control application can be described by enclosing steps, partial-Grafcet and forcing orders. This contribution presents a meta-driven approach to transform GRAFCET specifications, including hierarchical structures, to Structured Text (ST), an IEC 61131-3 control programming language. To exactly meet the GRAFCET evolution rules and to mimic the specified behavior of the sequential control specification, an interpretation algorithm has been defined. The concept has been validated by means of an application example."
}
@INPROCEEDINGS{7535242,
	author={N. {He} and V. {Oke} and G. {Allen}},
	booktitle={2016 IEEE International Conference on Electro Information Technology (EIT)}, 
	title={Model-based verification of PLC programs using Simulink design}, 
	year={2016},
	volume={},
	number={},
	pages={0211-0216},}

@INPROCEEDINGS{6489667,
	author={G. {Bayrak} and P. J. {Murr} and S. {Ulewicz} and B. {Vogel-Heuser}},
	booktitle={Proceedings of 2012 IEEE 17th International Conference on Emerging Technologies   Factory Automation (ETFA 2012)}, 
	title={Comparison of a transformed Matlab/Simulink model into the programming language CFC on different IEC 61131-3 PLC environments}, 
	year={2012},
	volume={},
	number={},
	pages={1-8},}

@online{Simulink:PLC,
	url={https://de.mathworks.com/products/simulink-plc-coder.html},
	urldate={2020-06-08},
	author={MathWorks Inc.},
	title={Simulink PLC Coder}
}